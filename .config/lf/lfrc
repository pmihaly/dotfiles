# Based on Luke's lf settings

# Basic vars
set shell zsh
set shellopts '-euy'
set ifs "\n"
set scrolloff 10
# set icons
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"

set preview true
set previewer ~/.config/lf/previewer

# cmds/functions
cmd open ${{
    case $(file --mime-type $f -bL) in
	image/vnd.djvu|application/pdf|application/octet-stream) setsid -f devour zathura $fx >/dev/null 2>&1 ;;
        text/*) $EDITOR $fx;;
	image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*) devour sxiv $f ;;
	audio/*) devour mpv --audio-display=no $f ;;
	video/*) setsid -f devour mpv $f -quiet >/dev/null 2>&1 ;;
    application/x-sc) sc-im $f ;;
	application/pdf|application/vnd*|application/epub*) setsid -f devour zathura $fx >/dev/null 2>&1 ;;
        # *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
        *) $EDITOR $fx;;
    esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract? [y/N] "
	read ans
	[ "$ans" = "y" ] && ext "$fx"
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete? [y/N] "
	read ans
	[ "$ans" = "y" ] && echo "$fx" | tr ' ' '\ ' | xargs -I{} rm -rf -- "{}"

}}

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	dest="$(fzf < ~/.config/bookmark-dirs)" &&
    echo "$fx" | while IFS= read -r x; do
		eval mv -iv \"$x\" \"$dest\"
	done
}}

cmd copyto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	dest="$(fzf < ~/.config/bookmark-dirs)" &&
    echo "$fx" | while IFS= read -r x; do
		eval cp -ivr \"$x\" \"$dest\"
	done
}}


cmd convimagestopdf ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "Convert file(s) to (.pdf will be added): "
    read ans
    img2pdf $fx | ocrmypdf -l hun+eng+deu - "$ans.pdf"
}}


cmd searchpdfs ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
    find -name "*.pdf" \
        | awk 'BEGIN {FS="\t"; OFS="\t"}; {command="pdftotext \""$0"\" - 2>/dev/null | tr \"\n\" \"_\" "; command|getline d; close(command); print $0, d}' \
        | fzf -e \
        | awk 'BEGIN {FS="\t"; OFS="\t"}; {print $1}' \
        | xargs -I{} devour zathura "{}"
}}

cmd createlinktodocs ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
    printf "$fx"

    echo "$fx" | while IFS= read -r x; do
		eval ln -sr \"$x\" \"$XDG_DOCUMENTS_DIR\"
	done

}}

# Bindings
map <c-f> $lf -remote "send $id select '$(fzf)'"
map g $lf -remote "send $id cd $(sed 's/\$HOME/~/g' ~/.config/bookmark-dirs | fzf)"
map gh
map gg top
map D delete
map E extract
map C copyto
map M moveto
map n push :mkdir<space>
map t push $touch<space>
map L createlinktodocs
map <c-r> reload
map <c-s> set hidden!
map <enter> open
map x $$f
map X !$f
map Y $echo "$f" | sed 's/ /\\ /g' | xclip -sel clip
map o &mimeopen $f
map O $mimeopen --ask $f

map A rename # at the very end
map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extention
map a push A<a-b> # after extention
map B $printf '%s\n' $fx | vidir -
map b $setwallpaper $fx
map S !$SHELL
map <c-p> convimagestopdf
map <c-o> searchpdfs

map <c-e> down
map <c-y> up
map V push :!nvim<space>
